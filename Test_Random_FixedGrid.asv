%% Prepare WorkSpace

clear all
% close all
clc

addpath('Classes')
addpath('Functions')
addpath('TCL')

%% Initialize Parameters
% Structural Parameters

% Search Parameters
SubSteps    = 16;
MaxLayouts  = 800;

% Initialize search
AllLayouts        = {};
AllLayouts{1}     = Layout_Fixed_Grid(3,3);

AllCodes = {};
AllCodes{1} = AllLayouts{1}.getCode;

figure(1)
clf
AllLayouts{1}.PlotGraph(1,1);

% Do Random-Search
tic

% BAR = waitbar(0,'Generating new layouts...');

figure(2)
clf
while length(AllLayouts) <= MaxLayouts
   
    % Fill the Queue with randomly chosen existing layouts. 
    QueueID = randi(length(AllLayouts),SubSteps,1);

    % Use a parallel pool to create new layouts by using the queue as
    % starting points. 
    
    Queue = AllLayouts(QueueID);
    NewLayouts = cell(1,length(Queue));
    NewCodes   = cell(1,length(Queue));
    Sensi      = cell(1,length(Queue));
    Compliance = zeros(1,length(Queue));
    Complexity = zeros(1,length(Queue));
    
    parfor (i = 1:length(Queue),16)
%     for i = 1:length(Queue)
        
        ThisLayout = Queue{i};
        
        % Get the list of possible type of actions, and its given list. 
        [Act_List] = ThisLayout.ListOfPossibleActions;
        
        Rand = randperm(size(Act_List,1),1);

        N1 = Act_List{Rand,1};
        N2 = Act_List{Rand,2};
        
        NewLayouts{i}     = ThisLayout.CreateStiffener(N1,N2);
        NewCodes{i}       = NewLayouts{i}.getCode;
        
        isNew = ~any(ismember(AllCodes,NewCodes{i}));
        
        if ~isNew 
            NewLayouts{i} = {};
            NewCodes{i}   = {};          
        else
            filename = sprintf("D:\\Runs\\Evaluation_%i",i);
            
            try
                [Compliance(i), Complexity(i), Sensi{i}] = NewLayouts{i}.EvaluatePerformance(filename);
            catch
                fprintf('Fuck up in evaluation %i',i)
            end
        end

    end

    % Clean bugged out layouts. 

    
    % Display New Results
    figure(2)
    clf
    for i = 1 : length(NewLayouts)
        if ~isempty(NewLayouts)
            subplot(4,4,i)
            NewLayouts{i}.PlotGraph(0,0);
        end
    end
    
    figure(3)
    clf
    for i = 1 : length(NewLayouts)
        subplot(4,4,i)
        imshow(Sensi{i},[],'InitialMagnification',4000);
        xlabel(num2str(Compliance(i)))
    end   
    pause(0.05)
    
    beep
    
    NewLayouts      = NewLayouts(~cellfun('isempty',NewLayouts));
    NewCodes        = NewCodes(~cellfun('isempty',NewCodes));
    
    % Extract from parallel runs, and ensure unique new solutions.
    [ID1, ID2, ID3] = unique(NewCodes);
    NewUnique       = NewCodes(ID2);
    CheckAll        = ~ismember(NewUnique, AllCodes);
    NewUnique       = NewUnique(CheckAll);
    NewLayouts      = NewLayouts(ID2);
    AllCodes        = [AllCodes,NewCodes];
    AllLayouts      = [AllLayouts,NewLayouts];

%     msg = sprintf('Generating New Layouts... (%1.2f seconds elapsed)',toc);
%     waitbar(length(AllLayouts) / MaxLayouts, BAR,msg)
    
end

% close(BAR);

fprintf('Generated %i Layouts in %1.2f seconds\n',length(AllLayouts),toc);


